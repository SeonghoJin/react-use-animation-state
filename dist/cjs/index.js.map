{"mappings":"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","sources":["src/index.tsx","src/useAnimationState.ts"],"sourcesContent":["export { useAnimationState } from './useAnimationState';\n","import { useState, useRef, useMemo, useEffect } from 'react';\nimport { AnimationState, UseAnimationStateOption } from './type';\n\nconst defaultOption: () => Required<UseAnimationStateOption> = () => ({\n  onAnimationTime: 0,\n  onDelayType: 'default',\n  onPreemption: false,\n  offAnimationTime: 0,\n  offDelayType: 'default',\n  offPreemption: false,\n});\n\nexport const useAnimationState = (defaultState: 'open' | 'close', option?: UseAnimationStateOption) => {\n  const [state, setState] = useState<AnimationState>(defaultState);\n  const { onAnimationTime, offAnimationTime, offDelayType, onDelayType, onPreemption, offPreemption } = useMemo(\n    () => Object.assign(defaultOption(), option ?? {}),\n    [option],\n  );\n\n  const offTimer = useRef<NodeJS.Timeout | null>(null);\n  const onTimer = useRef<NodeJS.Timeout | null>(null);\n\n  const cleanOnTimer = () => {\n    if (onTimer.current) {\n      clearTimeout(onTimer.current);\n    }\n  };\n\n  const cleanOffTimer = () => {\n    if (offTimer.current) {\n      clearTimeout(offTimer.current);\n    }\n  };\n\n  const on = () => {\n    if (state === 'opening' || state === 'open') {\n      return;\n    }\n    if (onAnimationTime === 0) {\n      setState('open');\n      return;\n    }\n\n    setState('opening');\n    onTimer.current = setTimeout(() => {\n      setState('open');\n    }, onAnimationTime);\n  };\n\n  const off = () => {\n    if (state === 'close' || state === 'closing') {\n      return;\n    }\n    if (offAnimationTime === 0) {\n      setState('close');\n      return;\n    }\n    setState('closing');\n    offTimer.current = setTimeout(() => {\n      setState('close');\n    }, offAnimationTime);\n  };\n\n  const onDefaultAnimation = () => {\n    if (onPreemption && (state === 'close' || state === 'closing')) {\n      cleanOffTimer();\n      on();\n      return;\n    }\n\n    if (!onPreemption && state !== 'close') {\n      return;\n    }\n\n    on();\n  };\n\n  const offDefaultAnimation = () => {\n    if (offPreemption && (state === 'open' || state === 'opening')) {\n      cleanOnTimer();\n      off();\n      return;\n    }\n\n    if (!offPreemption && state !== 'open') {\n      return;\n    }\n\n    off();\n  };\n\n  const onDebounceAnimation = () => {\n    if (state === 'open') {\n      return;\n    }\n    if (state === 'closing' && !onPreemption) {\n      return;\n    }\n    if (state === 'closing' && onPreemption) {\n      cleanOffTimer();\n    }\n    if (onAnimationTime === 0) {\n      setState('open');\n      return;\n    }\n    cleanOnTimer();\n    setState('opening');\n    onTimer.current = setTimeout(() => setState('open'), onAnimationTime);\n  };\n\n  const offDebounceAnimation = () => {\n    if (state === 'close') {\n      return;\n    }\n    if (state === 'opening' && !offPreemption) {\n      return;\n    }\n    if (offPreemption && state === 'opening') {\n      cleanOnTimer();\n    }\n    if (offAnimationTime === 0) {\n      setState('close');\n      return;\n    }\n    cleanOffTimer();\n    setState('closing');\n    offTimer.current = setTimeout(() => setState('close'), offAnimationTime);\n  };\n\n  const onAnimation = (() => {\n    if (onDelayType === 'default') {\n      return onDefaultAnimation;\n    }\n    if (onDelayType === 'debounce') {\n      return onDebounceAnimation;\n    }\n    throw new Error('not supoort onDelayType');\n  })();\n\n  const offAnimation = (() => {\n    if (offDelayType === 'default') {\n      return offDefaultAnimation;\n    }\n    if (offDelayType === 'debounce') {\n      return offDebounceAnimation;\n    }\n    throw new Error('not support offDelayType');\n  })();\n\n  useEffect(() => {\n    return () => {\n      if (offTimer.current) {\n        clearTimeout(offTimer.current);\n      }\n      if (onTimer.current) {\n        clearTimeout(onTimer.current);\n      }\n    };\n  }, []);\n\n  return {\n    state,\n    onAnimation,\n    offAnimation,\n  };\n};\n"],"names":[],"version":3,"file":"index.js.map"}